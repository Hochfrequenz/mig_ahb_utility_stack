name: Release

on:
  push:
    branches:
      - main
    tags:
      - v*.*.*

jobs:
  tests:
    strategy:
      matrix:
        python-version: [3.11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          token: ${{secrets.edifact_templates_pat}} # expires 2023-04-24
          submodules: "recursive"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run tox
        run: |
          tox -e unit_tests
          tox -e integration_tests

  build-n-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Build a binary wheel and a source tarball
        run: |
          tox -e test_packaging
      - name: Publish distribution üì¶ to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  release:
    needs: build-n-publish
    strategy:
      matrix:
        python-version: ["3.11"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Generate release notes
        uses: release-drafter/release-drafter@v5
        with:
          version: ${{ github.ref }}
          publish: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Executable
        run: |
          pyinstaller --onefile --name maus_cli src/maus/__init__.py

      - name: Upload Executable to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/maus_cli${{ runner.os == 'Windows' && '.exe' || '' }}
          asset_name: maus_cli${{ runner.os == 'Windows' && '.exe' || '' }}
          asset_content_type: application/octet-stream
